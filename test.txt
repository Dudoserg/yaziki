int fuct(int a)
{
	if (a > 1)
	{
		return a * fuct(a - 1);
	}
	else
		return 1;
}

int globali = 0;
int globaln = 0;
double globalpoverty = 0;
double globalx = 0;

int cycle() {
	if (globali < 2 * globaln - 1) {
		globali = globali + 1;
		globalpoverty = globalpoverty * globalx;
		cycle();
	}
}

double pover(double x, int n)
{
	double poverty = 1;
	globalpoverty = 1;
	globaln = n;
	globali = 0;
	globalx = x;

	cycle();
	poverty = globalpoverty;

	return poverty;
}

int sgn(int n)
{
	int k = 0;
	k = n % 2;
	if (k == 0)
	{
		return 0 - 1;
	}
	else
		return 1;
}

int countafterpoint = 3;

double globalsum = 0;

int cycle2(int n, double x) {
	if (n <= countafterpoint) {
		globalsum = globalsum + (sgn(n)*pover(x, n)) / fuct(2 * n - 1);
		cycle2(n + 1, x);
	}
	return 0;
}

double expended(double x)
{
	double summ = 0;
    countafterpoint = countafterpoint + 1;

	cycle2(1, x);

	summ = globalsum;
	return summ;
}

int main()
{
  double x = 0;
  double y = 0;
  x = 314159 / 228000;
  y = expended(x);

}